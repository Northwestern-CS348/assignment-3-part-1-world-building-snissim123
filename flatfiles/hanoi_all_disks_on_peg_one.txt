"""
For a game where there are 5 disks,
write down the Facts and Rules to model the game state where 
all disks are on peg1.

        |            |            |
        |            |            |
       -|- disk1     |            |
      --|-- disk2    |            |
     ---|---         |            |
    ----|----        |            |
   -----|----- disk5 |            |
==========================================
       peg1         peg2         peg3
       
Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

"""

fact: (inst disk1 disk)
fact: (inst disk2 disk)
fact: (inst disk3 disk)
fact: (inst disk4 disk)
fact: (inst disk5 disk)

fact: (inst peg1 peg)
fact: (inst peg2 peg)
fact: (inst peg3 peg)

fact: (on disk1 peg1)
fact: (on disk2 peg1)
fact: (on disk3 peg1)
fact: (on disk4 peg1)
fact: (on disk5 peg1)

fact: (empty peg2)
fact: (empty peg3)

fact: (ontop disk1 disk2)
fact: (ontop disk2 disk3)
fact: (ontop disk3 disk4)
fact: (ontop disk4 disk5)

fact: (topofstack disk1 peg1)

fact: (movable disk1 peg1 peg2)
fact: (movable disk1 peg1 peg3)


rule: ((on ?x ?y) (on ?y ?z) -> (larger ?z ?x))
rule: ((topofstack ?x ?y) (empty ?z) -> (movable ?x ?y ?z))
rule: ((topofstack ?x ?y) (topofstack ?w ?z) (larger ?z ?x) -> (movable ?x ?y ?z)
rule: ((on ?x ?y) -> ~(empty ?y))
rule: (~(on ?x ?y) -> (empty ?y))
rule: (~(ontop ?x ?y) (on ?y ?z) -> (topofstack ?y ?z))
rule: ((topofstack ?x ?y) (ontop ?z ?x) -> (topofstack ?z ?y))
